parameters{
	Container as string ("data"),
	CityFolderPath as string ("WideWorldImportersDW/parquet/full/dimension_city"),
	SalesFolderPath as string ("WideWorldImportersDW/parquet/full/fact_sale"),
	SinkContainer as string ("data"),
	SinkFolderPath as string ("SparkTestResult"),
	StateFilter1 as string ("Texas"),
	StateFilter2 as string ("California")
}
source(output(
		CityKey as integer,
		WWICityID as integer,
		City as string,
		StateProvince as string,
		Country as string,
		Continent as string,
		SalesTerritory as string,
		Region as string,
		Subregion as string,
		Location as string,
		LatestRecordedPopulation as long,
		ValidFrom as timestamp,
		ValidTo as timestamp,
		LineageKey as integer
	),
	allowSchemaDrift: true,
	validateSchema: false,
	ignoreNoFilesFound: false,
	format: 'parquet',
	fileSystem: ($Container),
	folderPath: ($CityFolderPath)) ~> dimcity
source(output(
		SaleKey as long,
		CityKey as integer,
		CustomerKey as integer,
		BillToCustomerKey as integer,
		StockItemKey as integer,
		InvoiceDateKey as timestamp,
		DeliveryDateKey as timestamp,
		SalespersonKey as integer,
		WWIInvoiceID as integer,
		Description as string,
		Package as string,
		Quantity as integer,
		UnitPrice as decimal(18,2),
		TaxRate as decimal(18,3),
		TotalExcludingTax as decimal(18,2),
		TaxAmount as decimal(18,2),
		Profit as decimal(18,2),
		TotalIncludingTax as decimal(18,2),
		TotalDryItems as integer,
		TotalChillerItems as integer,
		LineageKey as integer
	),
	allowSchemaDrift: true,
	validateSchema: false,
	ignoreNoFilesFound: false,
	format: 'parquet',
	fileSystem: ($Container),
	folderPath: ($SalesFolderPath)) ~> sales
sales filter(TotalExcludingTax>700 && Profit>500) ~> salesfilter
dimcity filter(StateProvince==$StateFilter1 || StateProvince==$StateFilter2) ~> cityfilter
cityfilter select(mapColumn(
		CityKey,
		City,
		State = StateProvince,
		Country,
		Continent,
		SalesTerritory,
		Region,
		Subregion
	),
	skipDuplicateMapInputs: true,
	skipDuplicateMapOutputs: true) ~> cityselect
salesfilter select(mapColumn(
		CityKey,
		InvoiceDate = InvoiceDateKey,
		DeliveryDate = DeliveryDateKey,
		Salesperson = SalespersonKey,
		Package,
		Quantity,
		UnitPrice,
		TaxRate,
		TotalWithoutTax = TotalExcludingTax,
		TaxAmount,
		Profit,
		TotalWithTax = TotalIncludingTax
	),
	skipDuplicateMapInputs: true,
	skipDuplicateMapOutputs: true) ~> salesselect
salesselect, cityselect join((salesselect@CityKey) == (cityselect@CityKey),
	joinType:'left',
	matchType:'exact',
	ignoreSpaces: false,
	broadcast: 'auto')~> joinwithcity
joinwithcity select(mapColumn(
		InvoiceDate,
		DeliveryDate,
		Quantity,
		UnitPrice,
		TaxRate,
		TotalWithoutTax,
		TaxAmount,
		Profit,
		TotalWithTax,
		City,
		State,
		Country,
		Continent,
		SalesTerritory,
		Region,
		Subregion
	),
	skipDuplicateMapInputs: true,
	skipDuplicateMapOutputs: true) ~> joinselect
joinselect sink(allowSchemaDrift: true,
	validateSchema: false,
	format: 'parquet',
	umask: 0022,
	preCommands: [],
	postCommands: [],
	skipDuplicateMapInputs: true,
	skipDuplicateMapOutputs: true,
	fileSystem: ($SinkContainer),
	folderPath: ($SinkFolderPath)) ~> sinktostorage